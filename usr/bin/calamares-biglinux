#!/bin/bash

#Translation
LANGUAGE=$LANG:en
export TEXTDOMAINDIR="/usr/share/locale"
export TEXTDOMAIN=calamares-biglinux

while [  "$(ps -e | grep biglinux-verify)" != "" ]; do
    sleep 1
done

# md5sum
if [ ! -f "/tmp/checksum_biglinux_ok.html" ]; then

    /usr/bin/biglinux-verify-md5sum

    if [ -f "/tmp/md5sum_big_fail" ]; then
        exit 1
    fi
fi

# disable swap on disk
for diskswap in $(blkid | grep 'TYPE="swap"' | grep -v zram | cut -f1 -d:)
do
    sudo swapoff $diskswap
done

#Translation
LANGUAGE=$LANG:en
export TEXTDOMAINDIR="/usr/share/locale"
export TEXTDOMAIN=calamares-biglinux


if [ "${LANG:0:2}" = "pt" ]
then
    sed -i 's|pt/|pt/|g' /usr/share/calamares/branding/biglinux/show.qml
elif [ "${LANG:0:2}" = "es" ]
then
    sed -i 's|pt/|es/|g' /usr/share/calamares/branding/biglinux/show.qml

else
    sed -i 's|pt/|en/|g' /usr/share/calamares/branding/biglinux/show.qml
fi


if [ ! -f "/etc/calamares/biglinux" ]; then

# Simplify welcome

echo '---
showSupportUrl:         false
showKnownIssuesUrl:     false
showReleaseNotesUrl:    false

requirements:
    internetCheckUrl: http://networkcheck.kde.org
    requiredStorage:    4
    requiredRam:        0.5
    check:
      - storage
      - ram
      - power
      - internet
      - root
    required:
      - storage
      - ram
      - root' > /etc/calamares/modules/welcome.conf

# Force btrfs compression using zstd




sed -i 's|mount_option,|mount_option, "compress-force=zstd,space_cache=v2",|g' /usr/lib/calamares/modules/mount/main.py

# btrfs: defaults,noatime,autodefrag,compress=zstd


sed -i 's|btrfs: defaults|btrfs: defaults,noatime,rescue=usebackuproot,space_cache=v2,discard=async,autodefrag,compress-force=zstd:2,commit=10|g' /usr/share/calamares/modules/fstab.conf

# Use btrfs for default
sed -i 's|defaultFileSystemType.*"ext4"|defaultFileSystemType:  "btrfs"|g' /usr/share/calamares/modules/partition.conf

# not disable pacman-init
# sed -i '/^disable:/,$d' /usr/share/calamares/modules/services.conf


echo '
---
defaultGroups:
    - cdrom
    - floppy
    - audio
    - dip
    - video
    - plugdev
    - netdev
    - lpadmin
    - scanner
    - bluetooth
    - vboxsf
    - sambashare
    - input
    - scard
    - lp
    - network
    - power
    - sys
    - wheel
autologinGroup:  autologin
doAutologin:     false
sudoersGroup:    wheel
setRootPassword: false
doReusePassword: false
availableShells: /bin/bash, /bin/zsh
avatarFilePath:  ~/.face
userShell:       /bin/bash
passwordRequirements:
    nonempty: true' > /etc/calamares/modules/users.conf

    
echo '---
keyrings:
    - archlinux
    - manjaro
    - biglinux' > /etc/calamares/modules/postcfg.conf
    

sed -i 's|initialSwapChoice: none|initialSwapChoice: small|g' /etc/calamares/modules/partition.conf

# General configuration
echo '---
modules-search: [ local ]

sequence:
    - show:
        - welcome
        - locale
        - keyboard
        - partition
        - users
        - summary
    - exec:
        - partition
        - mount
        - unpackfs
        - networkcfg
        - machineid
        - fstab
        - locale
        - keyboard
        - localecfg
        - luksopenswaphookcfg
        - luksbootkeyfile
        - initcpiocfg
        - initcpio
        - users
        - displaymanager
        - mhwdcfg
        - hwclock
        - services
        - grubcfg
        - grubcfg-fix
        - bootloader
        - postcfg
        - btrfs-fix
        - umount
    - show:
        - finished   

branding: biglinux

prompt-install: true

dont-chroot: false
oem-setup: false
disable-cancel: false
disable-cancel-during-exec: false
quit-at-end: false' > /etc/calamares/settings.conf


touch /etc/calamares/biglinux

fi

#disable pacman-key populate
sed -i '/init_keyring/s/^/#/' /usr/lib/calamares/modules/postcfg/main.py
sed -i '/self.populate_keyring/s/^/#/' /usr/lib/calamares/modules/postcfg/main.py

#save EFI partitions
rm -f /tmp/efi-partitions
mkdir -p /boot/efi

DEVICE_LIVE_BOOT_TMP="$(readlink -f "$(df -h /run/miso/bootmnt/ | awk '{ print $1 }' | grep '/dev/')" | sed 's|/dev/||'g)"
if [ "$(echo "$DEVICE_LIVE_BOOT_TMP" | grep dm)" != "" ];
then
    DEVICE_LIVE_BOOT="$(ls /sys/block/${DEVICE_LIVE_BOOT_TMP}/slaves | sed 's|[0-9]||g')"
else
    DEVICE_LIVE_BOOT="$DEVICE_LIVE_BOOT_TMP"
fi


for i in $(LANGUAGE=C fdisk -l | grep -e "EFI System" -e "FAT" | cut -f1 -d" " | grep -v "$DEVICE_LIVE_BOOT")
do
    umount -l /boot/efi
    mount "$i" /boot/efi
    if [ -d /boot/efi/EFI ];
    then
        echo "$i" >> /tmp/efi-partitions
    fi
    umount -l /boot/efi

done

# Umount partitions
for i in $(blkid | grep -v 'TYPE="swap"'| grep -v 'TYPE="squashfs"' | grep -v '^/dev/sr0' | cut -f1 -d":")
do
    umount "$i"
done



# boot EFI without partition EFI
if [ -d /sys/firmware/efi ] && [ "$(cat /tmp/efi-partitions)" = "" ] ;
then
LIVEBOOT=EFI
PARTITION=LEGACY

TEXT_01=$"Deseja prosseguir com com a instalação em modo EFI?"
TEXT_02=$"O boot atual está utilizando o modo <span color='#CC2222'>EFI</span>, porém não encontrei nenhuma 
partição EFI neste computador.

Se este computador já possui outro sistema instalado e você pretende 
que ele permaneça instalado, provavelmente será necessário alterar a 
configuração na BIOS para fazer boot em modo Legacy, também 
chamado de modo BIOS."
yad --image=drive-harddisk --image-on-top --form --width=500 --height=100 --fixed \
--align=center \
--field="<b>$TEXT_01</b>
:LBL" \
--text "$TEXT_02
" \
--button=$" Continue"!gtk-apply:0 \
--button=$" Fechar"!gtk-cancel:1 \
--center --on-top --borders=20 --title=$"Instalar o sistema" \
--window-icon="/usr/share/icons/hicolor/scalable/apps/icon-big-hd-install.svg"

    if [ "$?" = "1" ];
    then
        exit
    fi
fi


# boot legacy and partition EFI
if [ ! -d /sys/firmware/efi ] && [ "$(cat /tmp/efi-partitions)" != "" ] ;
then
LIVEBOOT=LEGACY
PARTITION=EFI
TEXT_03=$"Deseja prosseguir com com a instalação em modo Legacy/BIOS?"
TEXT_04=$"O boot atual está utilizando o modo <span color='#CC2222'>Legacy/BIOS</span>, porém encontrei pelo 
menos uma partição EFI neste computador. 

Para que a instalação seja bem sucedida, provavelmente será necessário 
alterar a configuração na BIOS para fazer boot em modo EFI ou UEFI."
yad --image=drive-harddisk --image-on-top --form --width=500 --height=100 --fixed \
--align=center \
--field="<b>$TEXT_03</b>
:LBL" \
--text "$TEXT_04
" \
--button=$" Continue"!gtk-apply:0 \
--button=$" Fechar"!gtk-cancel:1 \
--center --on-top --borders=20 --title=$"Instalar o sistema" \
--window-icon="/usr/share/icons/hicolor/scalable/apps/icon-big-hd-install.svg"

    if [ "$?" = "1" ];
    then
        exit
    fi
fi


cd /usr/share/bigbashview/bcc/apps/bigbashview-calamares/
QT_QUICK_BACKEND=software QMLSCENE_DEVICE=softwarecontext QTWEBENGINE_CHROMIUM_FLAGS="--disable-logging --disable-gpu --no-sandbox --single-process --disable-gpu-compositing" bigbashview -n $"Instalar o BigLinux" -s 1100x650 index.sh.htm -i /usr/share/icons/hicolor/scalable/apps/icon-big-hd-install.svg

# Start calamares
if [ -e "/tmp/start_calamares" ]; then
    sudo QT_QUICK_BACKEND=software QSG_RENDER_LOOP=basic QT_XCB_GL_INTEGRATION=none /usr/bin/calamares-manjaro -d --platformtheme breeze
fi
